/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.promocao.view;

import br.com.ifba.promocao.controller.PromocaoIController;
import br.com.ifba.promocao.entity.Promocao;
import br.com.ifba.telainicial.view.TelaInicial;
import br.com.ifba.util.ButtonRenderer;
import jakarta.annotation.PostConstruct;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

/**
 *
 * @author Joice
 */
@Component
public class PromocaoList extends javax.swing.JFrame {
    
    @Autowired
    private PromocaoIController controller;
    
    @Autowired
    private ApplicationContext context;
    
    private List<Promocao> listaDePromocoes;

    /**
     * Creates new form PromocoesListar
     */
    public PromocaoList() {
        initComponents();
    }
    
    @PostConstruct
    private void init() {
    tblPromocoes.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {},
        new String [] {
            "TITULO", "REGRAS", "DESCRIÇÃO", "INICIO", "TERMINO", "TIPO", "EDITAR", "REMOVER"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, 
            java.lang.String.class, java.lang.String.class, java.lang.String.class,
            java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, true, true
        };

        @Override
        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
        
        // Configura a tabela
        configurarTabela();
        
        // Configura a pesquisa dinâmica
        setupPesquisaDinamica();

        // Carrega todos os dados inicialmente
        carregarDados();
        
        // Adiciona listeners de clique na tabela
        adicionarListenerDeCliqueNaTabela();
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPricipal = new javax.swing.JPanel();
        lblTituloTela = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        cbbTipoPesquisa = new javax.swing.JComboBox<>();
        lblTipo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        scpnTabelaPromocao = new javax.swing.JScrollPane();
        tblPromocoes = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlPricipal.setBackground(new java.awt.Color(102, 139, 195));

        lblTituloTela.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTituloTela.setForeground(new java.awt.Color(0, 0, 51));
        lblTituloTela.setText("VISUALIZAÇÃO DE PROMOÇÕES, CUPONS E PACOTES");

        cbbTipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PROMOÇÃO", "CUPOM", "PACOTE", "TODOS" }));
        cbbTipoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTipoPesquisaActionPerformed(evt);
            }
        });

        lblTipo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(0, 0, 51));
        lblTipo.setText("TIPO PESQUISADO");

        lblNome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNome.setForeground(new java.awt.Color(0, 0, 51));
        lblNome.setText("NOME");

        tblPromocoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {"", null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "TITULO", "REGRAS", "DESCRIÇÃO", "INICIO", "TERMINO", "TIPO"
            }
        ));
        scpnTabelaPromocao.setViewportView(tblPromocoes);

        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(0, 0, 51));
        btnCadastrar.setText("CADASTRAR");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHome.setForeground(new java.awt.Color(0, 0, 51));
        btnHome.setText("HOME");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPricipalLayout = new javax.swing.GroupLayout(pnlPricipal);
        pnlPricipal.setLayout(pnlPricipalLayout);
        pnlPricipalLayout.setHorizontalGroup(
            pnlPricipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPricipalLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTituloTela, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlPricipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblNome)
                .addGap(308, 308, 308)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlPricipalLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cbbTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnCadastrar))
            .addGroup(pnlPricipalLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(scpnTabelaPromocao, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPricipalLayout.setVerticalGroup(
            pnlPricipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPricipalLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTituloTela)
                .addGap(8, 8, 8)
                .addGroup(pnlPricipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPricipalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlPricipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipo)
                            .addComponent(lblNome))))
                .addGroup(pnlPricipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPricipalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(scpnTabelaPromocao, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        scpnTabelaPromocao.getAccessibleContext().setAccessibleParent(scpnTabelaPromocao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPricipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPricipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adicionarListenerDeCliqueNaTabela() {
        this.tblPromocoes.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int linha = tblPromocoes.rowAtPoint(evt.getPoint());
                int coluna = tblPromocoes.columnAtPoint(evt.getPoint());

                if (linha >= 0 && linha < listaDePromocoes.size()) {
                    Promocao promocaoSelecionada = listaDePromocoes.get(linha);

                    if (coluna == 6) { // Coluna Editar (índice 6)
                        abrirTelaEdicao(promocaoSelecionada);
                    } else if (coluna == 7) { // Coluna Remover (índice 7)
                        confirmarRemocao(promocaoSelecionada);
                    }
                }
            }
        });
    }

    private void abrirTelaEdicao(Promocao promocao) {
        try {
            PromocaoUpdate telaUpdate = context.getBean(PromocaoUpdate.class);
            telaUpdate.carregarPromocao(promocao);
            telaUpdate.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Erro ao abrir tela de edição: " + e.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void confirmarRemocao(Promocao promocao) {
        int resposta = JOptionPane.showConfirmDialog(this,
                "Deseja realmente remover esta promoção: \"" + promocao.getTitulo() + "\"?", 
                "Confirmar Remoção", 
                JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                controller.delete(promocao);
                JOptionPane.showMessageDialog(this, "Promoção removida com sucesso!");
                carregarDados();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, 
                    "Erro ao remover promoção: " + e.getMessage(), 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    
    private void configurarTabela() {
        // Define a altura das linhas
        tblPromocoes.setRowHeight(40);

        // Configura os renderers para as colunas de ação com os índices corretos
        tblPromocoes.getColumnModel().getColumn(6).setCellRenderer(new ButtonRenderer()); // Coluna EDITAR (índice 6)
        tblPromocoes.getColumnModel().getColumn(7).setCellRenderer(new ButtonRenderer()); // Coluna REMOVER (índice 7)
    }
    private ImageIcon scaleImage(String path, int size) {
        ImageIcon icon = new ImageIcon(getClass().getResource(path));
        Image img = icon.getImage();
        Image scaledImg = img.getScaledInstance(size, size, Image.SCALE_SMOOTH);
        return new ImageIcon(scaledImg);
    }
    
    public void carregarDados() {
        try {
            this.listaDePromocoes = controller.findAll();
            DefaultTableModel model = (DefaultTableModel) tblPromocoes.getModel();
            model.setRowCount(0);

            for (Promocao promocao : listaDePromocoes) {
                model.addRow(new Object[]{
                    promocao.getTitulo(),
                    promocao.getRegras(),
                    promocao.getDescricao(),
                    promocao.getDataInicio(),
                    promocao.getDataTermino(),
                    promocao.getTipo().getTitulo(),  
                    "", // Texto vazio para coluna EDITAR
                    ""  // Texto vazio para coluna REMOVER
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Erro ao carregar promoções: " + e.getMessage(),
                "Erro", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    private void setupPesquisaDinamica() {
        txtPesquisa.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { filtrarTabela(); }
            public void removeUpdate(DocumentEvent e) { filtrarTabela(); }
            public void changedUpdate(DocumentEvent e) { filtrarTabela(); }
        });
        
        cbbTipoPesquisa.addActionListener(e -> filtrarTabela());
    }
    
    private void filtrarTabela() {
        String termo = txtPesquisa.getText();
        String tipo = cbbTipoPesquisa.getSelectedItem().toString();
        
        List<Promocao> resultados = controller.filterPromocoes(termo, tipo);
        atualizarTabela(resultados);
    }
    
private void atualizarTabela(List<Promocao> promocoes) {
    DefaultTableModel model = (DefaultTableModel) tblPromocoes.getModel();
    model.setRowCount(0);

    for (Promocao p : promocoes) {
        model.addRow(new Object[]{
            p.getTitulo(),
            p.getRegras(),
            p.getDescricao(),
            p.getDataInicio(),
            p.getDataTermino(),
            p.getTipo(),
            "", // Texto vazio para coluna EDITAR
            ""  // Texto vazio para coluna REMOVER
        });
    }
}
    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        PromocaoSave telaCadastrar = context.getBean(PromocaoSave.class);
        telaCadastrar.setVisible(true);
        this.dispose(); //
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void cbbTipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTipoPesquisaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbbTipoPesquisaActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        TelaInicial telaInicial = context.getBean(TelaInicial.class);
        telaInicial.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnHome;
    private javax.swing.JComboBox<String> cbbTipoPesquisa;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTituloTela;
    private javax.swing.JPanel pnlPricipal;
    private javax.swing.JScrollPane scpnTabelaPromocao;
    private javax.swing.JTable tblPromocoes;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
}
