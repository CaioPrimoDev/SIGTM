/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.reserva.view;

import br.com.ifba.pontoturistico.view.*;
import br.com.ifba.evento.controller.EventoIController;
import br.com.ifba.evento.entity.Evento;
import br.com.ifba.evento.view.EventoListar;
import br.com.ifba.pontoturistico.controller.PontoTuristicoIController;
import br.com.ifba.pontoturistico.entity.PontoTuristico;
import br.com.ifba.reserva.controller.ReservaIController;
import br.com.ifba.reserva.entity.Reserva;
import br.com.ifba.sessao.UsuarioSession;
import br.com.ifba.util.StringUtil;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 *
 * @author juant
 */
@Component
@Scope("prototype") // Garante que cada clique em "Adicionar" crie uma janela nova
public class ReservaSave extends javax.swing.JFrame implements ApplicationContextAware{

    private final PontoTuristicoIController pontoTuristicoController;
    private final EventoIController eventoController;
    
    @Autowired
    private final ReservaIController reservaController;
    
    private UsuarioSession userLogado;
    private ApplicationContext applicationContext; // VARIÁVEL PARA O CONTEXTO SPRING    
    private ReservaList reservaList;
    
    /**
     * Creates new form ReservaSave
     */
    public ReservaSave(ReservaIController reservaController, UsuarioSession userLogado,
                            PontoTuristicoIController pontoTuristicoController, EventoIController eventoController) {
        // inicializa o controller como parametro recebido
        this.reservaController = reservaController;
        this.userLogado = userLogado;
        this.pontoTuristicoController = pontoTuristicoController;
        this.eventoController = eventoController;
        
        initComponents();
        
        setLocationRelativeTo(null); // inicializa o jframe no meio da tela
        // Impede que o usuário redimensione a janela
        this.setResizable(false);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); 
        
        carregarComboBox();
    }
    
    public void carregarComboBox(){
        // limpa a ComboBox antes de popular
        cmbEscolha.removeAllItems();

        // adiciona um item inicial nulo para representar "Selecione..."
        cmbEscolha.addItem(null);

        if (rbtPontoTuristico.isSelected()) {
            try {
                List<PontoTuristico> pontos = pontoTuristicoController.findAll();
                // Loop para adicionar cada OBJETO PontoTuristico
                for (PontoTuristico ponto : pontos) {
                    cmbEscolha.addItem(ponto); 
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao carregar Pontos Turísticos.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else if (rbtEvento.isSelected()) {
            try {
                List<Evento> eventos = eventoController.findAll();
                // Loop para adicionar cada OBJETO Evento
                for (Evento evento : eventos) {
                    cmbEscolha.addItem(evento);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao carregar Eventos.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }
    
    // Ele será chamado pela ReservaList para "entregar" a referência dela mesma.
    public void setReservaList(ReservaList reservaList) {
        this.reservaList = reservaList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLocalizacao1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        btnReservar = new javax.swing.JButton();
        lblInfo = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        rbtPontoTuristico = new javax.swing.JRadioButton();
        rbtEvento = new javax.swing.JRadioButton();
        cmbEscolha = new javax.swing.JComboBox<>();
        ftxtDataReserva = new javax.swing.JFormattedTextField();
        lblHorarioAber = new javax.swing.JLabel();
        btnPontosTuristicos = new javax.swing.JButton();
        btnEventos = new javax.swing.JButton();

        lblLocalizacao1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLocalizacao1.setText("LOCALIZAÇÃO: (RUA - BAIRRO) OU (PONTO DE REFERÊNCIA)");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnReservar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReservar.setText("RESERVAR");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        lblInfo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblInfo.setText("REALIZAR RESERVA");

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtPontoTuristico);
        rbtPontoTuristico.setText("Ponto Turistico");
        rbtPontoTuristico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPontoTuristicoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtEvento);
        rbtEvento.setText("Evento");
        rbtEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtEventoActionPerformed(evt);
            }
        });

        ftxtDataReserva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        lblHorarioAber.setText("DATA DA RESERVA: (dia/mes/ano)");

        btnPontosTuristicos.setText("Listar Pontos Turisticos");
        btnPontosTuristicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPontosTuristicosActionPerformed(evt);
            }
        });

        btnEventos.setText("Listar Eventos");
        btnEventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEventosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblInfo)
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblHorarioAber)
                    .addComponent(ftxtDataReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPontosTuristicos)
                            .addComponent(rbtPontoTuristico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtEvento)
                            .addComponent(btnEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btnCancelar)
                        .addGap(36, 36, 36)
                        .addComponent(btnReservar))
                    .addComponent(cmbEscolha, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblInfo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPontosTuristicos)
                    .addComponent(btnEventos))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPontoTuristico)
                    .addComponent(rbtEvento))
                .addGap(18, 18, 18)
                .addComponent(cmbEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblHorarioAber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtDataReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnReservar))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        // TODO add your handling code here:
        try {
            // coletar e Validar os dados da tela
            Object itemSelecionado = cmbEscolha.getSelectedItem();
            
            String dataDigitada = ftxtDataReserva.getText(); // Pega o texto puro do campo
            
            // Validação usando o novo método da StringUtil
            if (!StringUtil.isValidData(dataDigitada)) {
                JOptionPane.showMessageDialog(this, "O formato da data é inválido. Por favor, use dd/mm/aaaa.");
                return; // Interrompe a ação
            }

            // Pega o valor do campo de data. O .getValue() retorna um objeto java.util.Date
            Date dataUtil = (java.util.Date) ftxtDataReserva.getValue();

            // Validação dos campos obrigatórios
            if (itemSelecionado == null || dataUtil == null) {
                JOptionPane.showMessageDialog(this,
                        "Por favor, selecione um item e preencha a data da reserva.",
                        "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // converter a data para o tipo LocalDate (que é o tipo usado na entidade)
            java.time.LocalDate dataReserva = dataUtil.toInstant()
                    .atZone(java.time.ZoneId.systemDefault())
                    .toLocalDate();

            // criar o objeto Reserva
            Reserva novaReserva = new br.com.ifba.reserva.entity.Reserva();
            novaReserva.setDataReserva(dataReserva);

            // Verifica o tipo do item selecionado (PontoTuristico ou Evento) e o atribui à reserva
            if (itemSelecionado instanceof PontoTuristico) {
                novaReserva.setPontoTuristico((PontoTuristico) itemSelecionado);
            } 
            else if (itemSelecionado instanceof Evento) {
                novaReserva.setEvento((Evento) itemSelecionado);
            }

            // Chama o controller para salvar no banco de dados
            reservaController.save(novaReserva);

            JOptionPane.showMessageDialog(this, "Reserva realizada com sucesso! TOKEN: " + 
                                                                                        novaReserva.getToken(),
                                            "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            // Atualiza a tabela na tela de listagem para mostrar a nova reserva
            if (this.reservaList != null) {
                this.reservaList.carregarDados();
            }

            // Fecha a tela de cadastro
            this.dispose();

        } catch (Exception e) {
            // Captura e exibe qualquer erro que possa ocorrer durante o processo
            JOptionPane.showMessageDialog(this, "Erro ao realizar reserva: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Imprime o erro detalhado no console para ajudar a depurar
        }
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        // FECHA A TELA ATUAL (A TELA DE CADASTRO)
        this.dispose(); // <--- É esta linha que fecha a janela!
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void rbtPontoTuristicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPontoTuristicoActionPerformed
        // TODO add your handling code here:
        carregarComboBox();
    }//GEN-LAST:event_rbtPontoTuristicoActionPerformed

    private void btnPontosTuristicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPontosTuristicosActionPerformed
        // TODO add your handling code here:
        PontoTuristicoList telaPontoTuristicoList = applicationContext.getBean(PontoTuristicoList.class);
        telaPontoTuristicoList.setVisible(true);
    }//GEN-LAST:event_btnPontosTuristicosActionPerformed

    private void rbtEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtEventoActionPerformed
        // TODO add your handling code here:
        carregarComboBox();
    }//GEN-LAST:event_rbtEventoActionPerformed

    private void btnEventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEventosActionPerformed
        // TODO add your handling code here:
        EventoListar crudEventos = applicationContext.getBean(EventoListar.class);
        crudEventos.setVisible(true);
    }//GEN-LAST:event_btnEventosActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEventos;
    private javax.swing.JButton btnPontosTuristicos;
    private javax.swing.JButton btnReservar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Object> cmbEscolha;
    private javax.swing.JFormattedTextField ftxtDataReserva;
    private javax.swing.JLabel lblHorarioAber;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblLocalizacao1;
    private javax.swing.JRadioButton rbtEvento;
    private javax.swing.JRadioButton rbtPontoTuristico;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        this.applicationContext = applicationContext;
    }
}
